version: '3.8'

services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: comandas
      POSTGRES_USER: comandas_user
      POSTGRES_PASSWORD: comandas_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - comandas-network

  # Redis para cache e sessões
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - comandas-network

  # Backend Flask
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://comandas_user:comandas_password@db:5432/comandas
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key}
      - CORS_ORIGINS=http://localhost:3000,https://comandas.com
    ports:
      - "5001:5001"
    depends_on:
      - db
      - redis
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - comandas-network
    restart: unless-stopped

  # Frontend React (servidor de desenvolvimento)
  frontend:
    image: node:18-alpine
    working_dir: /app
    environment:
      - VITE_API_BASE_URL=http://localhost:5001
      - VITE_SOCKET_URL=http://localhost:5001
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - ./vite.config.js:/app/vite.config.js
      - ./tailwind.config.js:/app/tailwind.config.js
      - ./postcss.config.js:/app/postcss.config.js
      - ./index.html:/app/index.html
    command: >
      sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 3000"
    depends_on:
      - backend
    networks:
      - comandas-network

  # Nginx para produção (proxy reverso)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - comandas-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  comandas-network:
    driver: bridge 